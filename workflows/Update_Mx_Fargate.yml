name: 0.3 - Update and Push Image

env:
  aws_env: 'dev'
  AWS_REGION: 'eu-west-1'

on:
  push:
    branches: ['main']
    paths: ['*.mpr']
  workflow_dispatch:
  
jobs:
  Build_and_Deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_EX }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_EX }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Retrieve an authentication token
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login \
        --username AWS \
        --password-stdin $(aws sts get-caller-identity --query "Account" --output text).dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

    - name: Build docker image
      run: |
        docker build -t $(aws ssm get-parameter --name "${{ env.aws_env }}.ECRepo.project" --query "Parameter.Value" --output text) \
        -f ./infra/Dockerfile .

    - name: Tag docker image
      run: |
        docker tag $(aws ssm get-parameter --name "${{ env.aws_env }}.ECRepo.project" --query "Parameter.Value" --output text):latest $(aws sts get-caller-identity --query "Account" --output text).dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$(aws ssm get-parameter --name "${{ env.aws_env }}.ECRepo.project" --query "Parameter.Value" --output text):latest

    - name: Push docker image to repository
      run: | 
        docker push $(aws sts get-caller-identity \
        --query "Account" \
        --output text).dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$(aws ssm get-parameter --name "${{ env.aws_env }}.ECRepo.project" --query "Parameter.Value" --output text):latest

    - name: Update ECS cluster with new image
      run: | 
        aws ecs update-service \
        --cluster $(aws ssm get-parameter --name "${{ env.aws_env }}.ECSCluster.project" --query "Parameter.Value" --output text) \
        --service project-service \
        --force-new-deployment

  slack-workflow-status:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - Build_and_Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # Optional Input
          name: 'project - New App Version'
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "project - New App Version GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "project - New App Version GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}